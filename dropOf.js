// ჩამოსაგდები აპარატი
// მომხმარებელმა ჩამოსაგდები აპარატიდან შეიძინა გაზიანი სასმელი.


// ამ მაგალითის მიხედვით აპარატში არის 590 ცალი 50 თეთრიანი, 10 ცალი 1 ლარიანი, 20 ცალი 2 ლარიანი და ა.შ.
// ვთქვათ მომხმარებელმა შეაცურა 5 ლარიანი კუპიურა და ყიდულობს 1.50 იან პროდუქტს.
// ამ შემთხვევაში აპარატმა უნდა დააბრუნოს:

// 1. 1 ცალი 2 ლარიანი
// 2. 1 ცალი 1 ლარიანი
// 3. 1 ცალი 50 თეთრიანი

// რადგან ჩვენ გვსურს რაც შეილება მაღალი კუპიურები დავუბრუნოთ მომხმარებელს.
//  დავალებაა წაიკითხოთ bills ობიექტების მასივიდან მოაკლოთ ის კუპიურები, რაც მომხმარებელს უნდა დაუბრუნდეს.

// ამისათვის მან კუპიურა შეაცურა აპარატში:
const incomingBill = 10;

// ხოლო შეძენილი პროდუქტის ღირებულება იყო:
const productPrice = 5;

// აპარატში ხელმისაწვდომი კუპიურების რაოდენობა კი წერია ობიექტების მასივში:
const bills = [ 
    { lari: 0.50, quantity: 590 }, 
    { lari: 1, quantity: 10 }, 
    { lari: 2, quantity: 20 }, 
    { lari: 5, quantity: 30 }, 
    { lari: 10, quantity: 35 } 
];

// 1.  ფუნქციას სახელად dropCash() -  რომელსაც გადავცემ სამ პარამეტრს : incomingBill, productPrice, bills
// 2. პირველი იფით  ვამოწმებ თუ მომხმარებელს საკმარისი თანხა არ ექნება. 
// 3. change -  ში ვინახავ  იმას თუ რა თანხა უნდა დავუბრუნოთ მომხმარებელს. 
// 4. sortResult[] - უნდა შევინახო დასორტირებული  კუპონები ზემოდან ქვემოთ. 
// 5. bills.sort -  ვაკეთებ სორტირებას. 
// 6. ფორ ციკლით გადავირბენ bills -  ზე და მივწვდები ობიექტს. 

function dropCash(incomingBill, productPrice, bills) {
    if (incomingBill < productPrice) {           
            return 'მომხმარებელს არ აქვს  საკმარისი თანხა';
    } 
    let change =  incomingBill - productPrice; 

    let sortResult = [];

    bills.sort((a, b) => b.lari - a.lari);

    for(let i = 0; i < bills.length; i ++){
            //აქ უნდა დავაბრუნო კუპიურები
    }
    return change

}
console.log(dropCash(10, 5, bills));

  
 
 
 
 
 